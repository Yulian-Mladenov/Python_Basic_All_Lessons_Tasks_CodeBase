# first approach - not 100% successfully
# number_of_opened_tabs = int(input())
# salary = int(input())
#
# FACEBOOK = 150
# INSTAGRAM = 100
# REDDIT = 50
#
# penalty = 0
#
# for the_number_of_the_current_tab in range(number_of_opened_tabs):
#     website_name = input()
#     if website_name == FACEBOOK:
#         penalty = 150
#     elif website_name == INSTAGRAM:
#         penalty = 100
#     elif website_name == REDDIT:
#         penalty = 50

number_of_opened_tabs = int(input())
salary = int(input())

FACEBOOK = 150
INSTAGRAM = 100
REDDIT = 50
flag = False

for the_number_of_the_current_tab in range(number_of_opened_tabs):
    website_name = input()
    if website_name == "Facebook":
        salary -= FACEBOOK
    elif website_name == "Instagram":
        salary -= INSTAGRAM
    elif website_name == "Reddit":
        salary -= REDDIT

    if salary <= 0:
        print("You have lost your salary.")
        flag = True
        break

if not flag:
    print(salary)

# В тази задача 1-вия хинт е че не е използвана отделна променлива в която да се съдържа сумата,ами вместо това
# е използвана променливата в която се помни сумата въведена във входните данни,тоест един и същ ефект,но вместо две
# променливи за едни и същи данни,се използва една и съща променлива чиято стойност се манипулира във проверките на цикъла.
#
# Следващия хинт е използването на променливата flag, която реално има функцията на превключвател,метафорично казано.
# Реално тази променлива има ефекта да "печата" стойността или не,на определен код-блок спрямо моментната си стойност.
# Ако стойността на тази променлива flag бъде променена при някакви определени условия в някаква проверка например,то нейната нова
# стойност може да промени изхода на програмата. Ефекта на транзистора.

# В случая с тази програма,тази променлива се използва за превключвател,за да направи така че,ако има останали пари от заплатата,те да бъдат отпечатани. Ако няма останали пари
# съответно програмата ще приключи в момента в който сравни и види,че пари вече  няма ще отпечата че си изгубил всички пари,но няма да отпечата едновременно с това и 0,тоест че не
# ти е останало нищо. Тоест ако заплатата остане 0,идето ще влезе в последната проверка започваща на 37-ми ред и ще ти отпечата че нямаш повече пари,но в същия момент няма да ти отпечата
# и кода от 43-ти ред! защото тази променлива флаг си е сменила стойността.И щом стойността и вече е различна,последната проверка от 42-ри ред казва при това положение не печатай 43-ти ред.
# Но ако идето не влезе в проверката на 37-ми ред, тогава 43-ти ред ще се отпечата.

# На практика тази променлива-превключвател заменя обичайната иф-елс конструкция,като при флага особенното е че не винаги влиза в елс ако не влезе в ифа,влиза само ако се смени стойността му.
# Така че може би по-правилно е да се каже че наподобява иф-елиф.
# Също така!!! този тип конструкция с флаг променлива се използва в комбинацията в думата break и ефекта е че след като се изпълни блока от код преди тацзи променлива
#  и се изпълни ефекта от нея,след това програмата спира защото има брейк дума след това.А пък думата break също така се използва,за да спре принудително изпълнението на програмата
# след като е постигната някаква цел/ефект/стойност от нея. Например достигната е някаква определена сума,когато това стане идето види ли че има брейк програмата спира принудително.
# Обобщено: думата брейк спира принудително изпълнението на програмата. Флаг променилвата променя стонйостта си ако бъде прочетена от идето и това отключва възможността за изпълнение на друго парче код,
# кеото може да бъде изпълено само ако тя смени стойността си. Като стойността на променливата се чени от true на false или обратно.

# Как работи на практика,какъв ефект има в кода. В началото на кода на 26-ти ред има стойност фолс, след това в проверката от 37-ми ред се казва стойността и да стане тру.
# Тоест ако идето влезе в тази проверка,то трябва освен всичко друго,да промени и стойносста на променливата флаг,което означава че горе на 26-ти ред стойността ще се смени
# и автоматично кода от 42-ри 43-ти ред няма дъ бъде изпълнен защото условието той да бъде изпълнен е: if not flag: което в псевдо код означава: ако флаг не е тру:
# принтирай това което е под него,тоест принтирай ако флага не е тру,да но той е тру,защото беше сменен с тру на 39-ти ред,и съответно принтира 43-ти ред. Ако стойността на
# флага не беше сменена на 39-ти ред,щеше да си остане фолс и тогава щеше да се изпълни кода на 42-ри и 43 ти ред,защото той казва да се принтира ако флага НЕ Е тру и той не е,той е
# фолс.Тоест тук когато смениш стойността на флаг променливата във ред 39,ти спираш по нататъшното и изпълнение в 42-ри и 43-ти редове,защото си сменил стойността и преди да дойде
# реда за изпъленение на редове 42 и 43. Също така пак да кажа че реалния смисъл на такъв тип код: "if not flag:",означава че by default стойносста на флаг е тру без значение горе
# на 26-ти ред какво пише като стойност,тълкуванието е: ако флаг НЕ Е тру,направи еди какво си.Тоест идето пита,флаг тру ли е? защото ако не е тру,тогава направи това на следващия ред.
